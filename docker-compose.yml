version: '3'
services:
  sqs:
    container_name: sqs
    image: roribio16/alpine-sqs
    ports:
      - '9324:9324'
      - '9325:9325'
    volumes:
      - ./sqs-emulator:/opt/custom
    env_file:
      - ./.env
  cache:
    container_name: redis
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/testing

  minio:
    container_name: s3
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=AKIAIOSFODNN7EXAMPLE
      - MINIO_ROOT_PASSWORD=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    command: server /data --console-address ":9001"
    ports:
      - '9000:9000'
      - '9001:9001'
  # configure minio on startup (create buckets, etc)
  # inspired by https://github.com/minio/minio/issues/4769
  # and         https://gist.github.com/haxoza/22afe7cc4a9da7e8bdc09aad393a99cc
  minio_init:
    container_name: s3_init
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add minio http://minio:9000 AKIAIOSFODNN7EXAMPLE wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY;
      /usr/bin/mc mb   minio/configs;
      /usr/bin/mc policy set public minio/configs;
      /usr/bin/mc cp --recursive /configs/ minio/configs/ ;
      exit 0;
      "
    volumes:
      - ./configs:/configs
  wat-api:
    container_name: wat-api
    depends_on: 
      - minio_init
      - cache
      - sqs
    build: .
    restart: always
    environment:
      - WAT_API_SKIP_JWT=True
      - WAT_API_APP_PORT=8001
      - WAT_API_AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
      - WAT_API_AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      - WAT_API_AWS_DEFAULT_REGION=us-east-1
      - WAT_API_AWS_S3_REGION=us-east-1
      - WAT_API_AWS_S3_BUCKET=configs
      - WAT_API_S3_MOCK=True
      - WAT_API_S3_BUCKET=configs
      - WAT_API_S3_ENDPOINT=minio:9000
      - WAT_API_S3_DISABLE_SSL=True
      - WAT_API_S3_FORCE_PATH_STYLE=True
      - WAT_API_REDIS_HOST=cache
      - WAT_API_REDIS_PORT=6379
      - WAT_API_REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      - WAT_API_SQS_ENDPOINT=http://sqs:9324
    ports:
      - 8001:8001
    volumes:
      - ./:/workspaces
#  lambda:
#    container_name: lambda
#    image: williamlehman/lambda-mock:v0.0.17
#    depends_on:
#      - sqs
#      - cache
#      - minio_init
#      - wat-api
#    environment:
#      - AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
#      - AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
#      - AWS_DEFAULT_REGION=us-east-1
#      - AWS_S3_REGION=us-east-1
#      - AWS_S3_BUCKET=configs
#      - S3_MOCK=True
#      - S3_BUCKET=configs
#      - S3_ENDPOINT=host.docker.internal:9000
#      - S3_DISABLE_SSL=True
#      - S3_FORCE_PATH_STYLE=True
#      - REDIS_HOST=host.docker.internal
#      - REDIS_PORT=6379
#      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
#      - SQS_ENDPOINT=http://host.docker.internal:9324
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
volumes:
  cache:
    driver: local